plot1
plot1 <- ggplot() + geom_line(data = vb_usa, aes(x=yday,y = n)) + geom_smooth(data = vb_usa, aes(x=yday,y = n))
plot1
vb_usa <- vb_1 %>%
bind_rows(vb_2, vb_3, vb_4) %>%
distinct(., .keep_all = FALSE) %>%
filter(country == "United States") %>%
mutate(month = month(birthdate), day = day(birthdate), yday = yday(birthdate)) %>%
drop_na() %>%
group_by(month) %>%
summarize(n = n())
plot1 <- ggplot() + geom_line(data = vb_usa, aes(x=month,y = n)) + geom_smooth(data = vb_usa, aes(x=month,y = n))
plot1
plot1 <- ggplot() + geom_col(data = vb_usa, aes(x=month,y = n)) + geom_smooth(data = vb_usa, aes(x=month,y = n))
plot1
vb_usa <- vb_1 %>%
bind_rows(vb_2, vb_3, vb_4) %>%
distinct(., .keep_all = FALSE) %>%
mutate(month = month(birthdate), day = day(birthdate), yday = yday(birthdate)) %>%
drop_na() %>%
group_by(month) %>%
summarize(n = n())
plot1 <- ggplot() + geom_col(data = vb_usa, aes(x=month,y = n))
plot1
vb_usa <- vb_1 %>%
bind_rows(vb_2, vb_3, vb_4) %>%
distinct(., .keep_all = FALSE) %>%
filter(country == "United States") %>%
mutate(month = month(birthdate), day = day(birthdate), yday = yday(birthdate), yweek = yweek(birthdate)) %>%
drop_na() %>%
group_by(month) %>%
summarize(n = n())
vb_usa <- vb_1 %>%
bind_rows(vb_2, vb_3, vb_4) %>%
distinct(., .keep_all = FALSE) %>%
filter(country == "United States") %>%
mutate(month = month(birthdate), day = day(birthdate), yday = yday(birthdate), yweek = week(birthdate)) %>%
drop_na() %>%
group_by(month) %>%
summarize(n = n())
vb_usa <- vb_1 %>%
bind_rows(vb_2, vb_3, vb_4) %>%
distinct(., .keep_all = FALSE) %>%
filter(country == "United States") %>%
mutate(month = month(birthdate), day = day(birthdate), yday = yday(birthdate), yweek = week(birthdate)) %>%
drop_na() %>%
group_by(yweek) %>%
summarize(n = n())
plot1 <- ggplot() + geom_col(data = vb_usa, aes(x=yweek,y = n))
plot1
=======
library(tidyverse)
# Data
individuals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-23/individuals.csv')
locations <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-23/locations.csv')
install.packages("elevatr")
library(elevatr)
View(locations)
View(individuals)
View(individuals)
locations_elev <- select(longitude, latitude, event_id)
locations_elev <- locations %>%
select(longitude, latitude, event_id)
View(locations_elev)
elevations <- get_elev_point(locations_elev)
elevations <- get_elev_point(locations_elev, src= "epqs")
locations_elev <- locations %>%
select(longitude, latitude)
elevations <- get_elev_point(locations_elev, src= "epqs")
locations_elev = as(locations_elev, "Spatial")
install.packages("rgbif")
library(rgbif)
locations_elev <- locations %>%
select(longitude, latitude, event_id)
new_elev <- elevation(input = locations, latitude = latitude, longitude = longitude, elevation_model = "srtm3", username = "envirooviwc")
new_elev <- elevation(input = locations, latitude = "latitude", longitude = "longitude", elevation_model = "srtm3", username = "envirooviwc")
new_elev <- elevation(latitude = locations$latitude, longitude = locations$longitude, elevation_model = "srtm3", username = "envirooviwc")
new_elev <- elevation(latitude = locations$latitude, longitude = locations$longitude, username = "envirooviwc")
new_elev <- elevation(latitude = locations$latitude, longitude = locations$longitude, username = "envirooviwc")
locations_elev <- locations %>%
select(longitude, latitude, event_id) %>%
top_n(50)
new_elev <- elevation(latitude = locations_elev$latitude, longitude = locations_elev$longitude, username = "envirooviwc")
new_elev <- elevation(latitude = locations_elev$latitude, longitude = locations_elev$longitude, username = "envirooviwc")
View(new_elev)
new_elev <- elevation(latitude = locations$latitude, longitude = locations$longitude, username = "envirooviwc")
View(new_elev)
locations_elev1 <- locations %>%
select(longitude, latitude, event_id) %>%
top_n(1000)
new_elev <- elevation(latitude = locations$latitude, longitude = locations$longitude, username = "envirooviwc")
locations_elev1 <- locations %>%
select(longitude, latitude, event_id) %>%
top_n(1000)
new_elev <- elevation(latitude = locations_elev$latitude, longitude = locations_elev$longitude, username = "envirooviwc")
locations_elev1 <- locations %>%
select(longitude, latitude, event_id) %>%
top_n(1000)
new_elev <- elevation(latitude = locations_elev1$latitude, longitude = locations_elev1$longitude, username = "envirooviwc")
View(new_elev)
View(new_elev)
View(individuals)
View(locations)
locations_weekly <- locations %>%
mutate(week = week(timestamp))
library(lubridate)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp))
View(locations_weekly)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp)) %>%
group_by(animal_id) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
View(locations_weekly)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp)) %>%
group_by(animal_id, week, year) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
View(locations_weekly)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp)) %>%
group_by(animal_id, week, year, study_site) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
new_elev <- elevation(latitude = locations_weekly$latitude, longitude = locations_weekly$longitude, username = "envirooviwc")
new_elev <- elevation(latitude = locations_weekly$wk_lat, longitude = locations_weekly$wk_long, username = "envirooviwc")
caribou_elev <- inner_join(new_elev, locations_weekly)
caribou_elev <- inner_join(new_elev, locations_weekly, by = c(wk_lat, latitude))
caribou_elev <- inner_join(new_elev, locations_weekly, by = c("wk_lat", "latitude"))
caribou_elev <- inner_join(new_elev, locations_weekly, by = c("latitude" = "wk_lat"))
View(caribou_elev)
caribou_elev <- inner_join(new_elev, locations_weekly, by = c("latitude" = "wk_lat", "longitude" = "wk_long"))
caribou_elev <- inner_join(new_elev, locations_weekly, by = c("latitude" = "wk_lat", "longitude" = "wk_long"))
caribou_elev <- outer_join(new_elev, locations_weekly, by = c("latitude" = "wk_lat", "longitude" = "wk_long"))
caribou_elev <- full_join(new_elev, locations_weekly, by = c("latitude" = "wk_lat", "longitude" = "wk_long"))
View(caribou_elev)
caribou_elev <- left_join(new_elev, locations_weekly, by = c("latitude" = "wk_lat", "longitude" = "wk_long"))
caribou_elev <- left_join(new_elev, locations_weekly, by = c(, "longitude" = "wk_long"))
caribou_elev <- left_join(new_elev, locations_weekly, by = c( "longitude" = "wk_long"))
caribou_elev <- right_join(new_elev, locations_weekly, by = c( "longitude" = "wk_long"))
caribou_elev <- semi_join(new_elev, locations_weekly, by = c( "longitude" = "wk_long"))
View(caribou_elev)
caribou_elev <- semi_join(locations_weekly,new_elev,  by = c( "wk_long" = "longitude"))
View(caribou_elev)
caribou_elev <- inner_join(locations_weekly,new_elev,  by = c( "wk_long" = "longitude"))
View(new_elev)
View(locations_weekly)
View(new_elev)
View(locations_weekly)
View(locations_weekly)
View(new_elev)
caribou_elev <- bind_rows(locations_weekly, new_elev)
View(caribou_elev)
caribou_elev <- bind_cols(locations_weekly, new_elev)
View(caribou_elev)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp), isoweek = isoweek(timestamp)) %>%
group_by(animal_id, week, year, study_site) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
View(locations_weekly)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp), isoweek = isoweek(timestamp)) %>%
group_by(animal_id, week, year, study_site) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp), isoweek = isoweek(timestamp)) %>%
group_by(animal_id, week, year, isoweek, study_site) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
View(locations_weekly)
class(locations_weekly$week)
class(locations_weekly$isoweek)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp), c_week = ceiling_date(timestamp, unit = "week"))
View(locations_weekly)
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp), c_week = ceiling_date(timestamp, unit = "week")) %>%
group_by(animal_id, week, year, c_week, study_site) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
locations_weekly <- locations %>%
mutate(week = week(timestamp), year = year(timestamp), c_week = ceiling_date(timestamp, unit = "week")) %>%
group_by(animal_id,c_week, study_site) %>%
summarise(wk_lat = mean(latitude), wk_long = mean(longitude))
View(locations_weekly)
new_elev <- elevation(latitude = locations_weekly$wk_lat, longitude = locations_weekly$wk_long, username = "envirooviwc")
caribou_elev <- bind_cols(locations_weekly, new_elev)
Elev_plot <- ggplot(data = caribou_elev) + geom_line(x=c_week, y= elevation)
View(caribou_elev)
Elev_plot <- ggplot(data = caribou_elev) + geom_line(x=c_week, y= elevation_geonames)
Elev_plot <- ggplot(data = caribou_elev) + geom_line(aes(x=c_week, y= elevation_geonames, color= animal_id))
Elev_plot
Elev_plot <- ggplot(data = caribou_elev) + geom_line(aes(x=c_week, y= elevation_geonames))
Elev_plot
caribou_elev <- bind_cols(locations_weekly, new_elev) %>%
mutate(year = year(c_week)) %>%
filter(year >= 2001)
Elev_plot <- ggplot(data = caribou_elev) + geom_line(aes(x=c_week, y= elevation_geonames))
Elev_plot
Elev_plot <- ggplot(data = caribou_elev) + geom_line(aes(x=c_week, y= elevation_geonames)) + facet_wrap(~study_site)
Elev_plot
Elev_plot <- ggplot(data = caribou_elev) + geom_line(aes(x=c_week, y= elevation_geonames, color = latitude)) + facet_wrap(~study_site)
Elev_plot
Elev_plot <- ggplot(data = caribou_elev) + geom_line(aes(x=c_week, y= elevation_geonames, color = longitude)) + facet_wrap(~study_site)
Elev_plot
install.packages("moveVis")
library(moveVis)
library(move)
install.packages("moveVis")
yes
install.packages("moveVis")
library(moveVis)
install.packages("magick")
library(moveVis)
install.packages("magick")
library(moveVis)
library(move)
install.packages("move")
library(move)
library(moveVis)
data("locations", package = "moveVis")
locations <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-23/locations.csv')
data("locations", package = "moveVis")
m <- align_move(locations, res = 4 , unit = "mins")
movedata <- df2move(locations, x= latitude, y=longitude, time = timestamp)
movedata <- df2move(locations, x= latitude, y=longitude, proj = "WGS84" time = timestamp)
data("locations", package = "moveVis")
movedata <- df2move(locations, x= latitude, y=longitude, proj = "WGS84", time = timestamp)
movedata <- df2move(locations, x= latitude, y=longitude, proj = 4326, time = timestamp)
movedata <- df2move(locations, x= "latitude", y="longitude", proj = 4326, time = timestamp)
movedata <- df2move(locations, x= "latitude", y="longitude", proj = 4326, time = timestamp, track_id = "animal_id")
movedata <- df2move(locations, x= "latitude", y="longitude", proj = 4326, time = "timestamp", track_id = "animal_id")
>>>>>>> f4590913db2b6c1da4757cc684734c0f0551920f
library(tidyverse)
#Data
energy_types <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/energy_types.csv')
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/energy_types.csv')
View(energy_types)
View(country_totals)
poulation <- UNdata_Export_20200803_210212723 <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv", col_types = cols(`Year(s)` = col_date(format = "%Y")))
View(poulation)
#Tidy
population <- population %>%
mutate(Population = Value * 1000)
population <- UNdata_Export_20200803_210212723 <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv", col_types = cols(`Year(s)` = col_date(format = "%Y")))
#Tidy
population <- population %>%
mutate(Population = Value * 1000)
View(population)
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
View(country_totals)
?case_when
country_totals <- country_totals %>%
case_when(country == EL ~ country_name == "Greece")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == EL ~ "Greece"))
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals <- country_totals %>%
mutate(country_name = case_when(country == EL ~ "Greece"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ county))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country))
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production")
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
select(`Country or Area`, Population)
View(population)
population <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv", col_types = cols(`Year(s)` = col_date(format = "%Y")))
View(population)
population <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv")
View(population)
View(energy_types)
View(country_totals)
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
select(`Country or Area`, Year(s), Population)
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
select(`Country or Area`, `Year(s)`, Population)
View(population)
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer()
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(-county,names_to = "Contry", values_to = "Energy")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(-country,names_to = "Contry", values_to = "Energy")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(names_to = "Country", values_to = "Energy")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(3,5:7), names_to = "Country", values_to = "Energy")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Country", values_to = "Energy")
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
rename(`Country or Area` = "country") %>%
select(country, `Year(s)`, Population)
population <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv")
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
rename(`Country or Area` = "country") %>%
select(country, `Year(s)`, Population)
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
rename(country = `Country or Area`, Year = `Year(s)`) %>%
select(country, Year, Population)
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(population, by = c("country", "Year"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country", "Year"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = "country"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = "country")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(population, by = "country")
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country_name", "country"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(population, by = c("country_name", "country"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(population, by = c("country_name" = "country"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country_name" = "country"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country" = "country_name"))
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country" = "country_name"))
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy")
country_totals <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country" = "country_name", "Year" = "year"))
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country" = "country_name", "Year" = "year"))
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country_name" = "country", "year" = "Year"))
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country_name" = "country", "Year" = "year"))
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
left_join(.,population, by = c("country_name" = "country", "Year" = "Year"))
class(population$Year)
class(country_totals$Year)
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_total
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy")
View(country_total)
class(country_total$Year)
population <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv")
#Tidy
population <- population %>%
mutate(Population = Value * 1000, "Year(s)" = as.character("Year(s)")) %>%
rename(country = `Country or Area`, Year = `Year(s)`) %>%
select(country, Year, Population)
View(population)
population <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv")
#Tidy
population <- population %>%
#Tidy
population <- population %>%
mutate(Population = Value * 1000, "Year(s)" = as.character()) %>%
rename(country = `Country or Area`, Year = `Year(s)`) %>%
select(country, Year, Population)
population <- read_csv("2020-08-03/UNdata_Export_20200803_210212723.csv")
#Tidy
population <- population %>%
mutate(Population = Value * 1000) %>%
rename(country = `Country or Area`, Year = `Year(s)`) %>%
select(country, Year, Population)
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
mutate(Year = as.numeric(Year))
class(country_total$Year)
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
mutate(Year = as.numeric(Year))%>%
left_join(.,population, by = c("country_name" = "country", "Year" = "Year"))
View(country_total)
install.packages("gt")
install.packages("gt")
country_total <- country_totals %>%
mutate(country_name = case_when(country == "EL" ~ "Greece", country == "UK" ~ "United Kingdom", TRUE ~ country_name)) %>%
filter(type == "Total net production") %>%
pivot_longer(cols = c(5:7), names_to = "Year", values_to = "Energy") %>%
mutate(Year = as.numeric(Year))%>%
left_join(.,population, by = c("country_name" = "country", "Year" = "Year")) %>%
mutate(per_cap = Energy / Population) %>%
filter(Year == "2018")
library(tidyverse)
library(gt)
library(rlang)
install.packages("rlang")
library(tidyverse)
library(gt)
library(rlang)
install.packages("rlang")
detach("package:rlang", unload = TRUE)
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
library(gt)
library(broom)
library(tidyverse)
install.packages("backports")
library(tidyverse)
library(broom)
>>>>>>> d5baa66cdea50bed6109f499158ef385f3e0b7c0
library(tidyverse)
library(qualV)
library(fuzzyjoin)
library(stringi)
us_cities_states_counties <- read_delim("https://raw.githubusercontent.com/grammakov/USA-cities-and-states/master/us_cities_states_counties.csv",
"|", escape_double = FALSE, trim_ws = TRUE)
chopped <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-25/chopped.tsv')
us_cities <- us_cities_states_counties %>%
unite(city, "City alias","State short", sep = " ") %>%
select(city)
chopped3 <- chopped %>%
pivot_longer(cols = c("contestant1_info", "contestant2_info", "contestant3_info", "contestant4_info"), names_to = "contestant", values_to = "details") %>%
fuzzy_inner_join(us_cities, by = c("details" = "city"), match_fun = str_detect)
View(chopped3)
