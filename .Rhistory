addMarkers(data = locations, lat = LATITUDE, lng = LONGITUDE)
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addMarkers(data = locations, lat = "LATITUDE", lng = "LONGITUDE")
map
View(locations)
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addMarkers(data = locations, lng = "LONGITUDE", lat = "LATITUDE")
map
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addMarkers(data = locations, ~LONGITUDE, ~LATITUDE)
map
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addMarkers(data = locations, ~LONGITUDE, ~LATITUDE, clusterOptions = markerClusterOptions(freezeAtZoom = 5))
map
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, color = ~pal(category), stroke = FALSE, fillOpacity = 0.5)
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, color = ~category, stroke = FALSE, fillOpacity = 0.5)
map
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, color = ~category, stroke = FALSE, fillOpacity = 0.5, popup = ~brewery, label = ~brewery)
map
View(locations)
View(locations)
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, cstroke = FALSE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste("<strong>Brewery:</strong>",brewery,
"<br>",
"<strong>Beer Name:</strong>",beer_name,
"<br>",
"<strong>Category:</strong>",category))
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste("<strong>Brewery:</strong>",brewery,
"<br>",
"<strong>Beer Name:</strong>",beer_name,
"<br>",
"<strong>Category:</strong>",category))
map
View(locations)
View(locations)
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
summarise(cluster = toString(unique(cluster)))
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
summarise(cluster = toString(unique()))
View(locations)
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
summarise(cluster = list(unique(cluster)))
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = glue(brewery))
library(glue)
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = glue(brewery))
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = glue_data(brewery))
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(brewery, collapse = " "))
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(brewery, collapse = ", "))
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste("<strong>Brewery:</strong>",all_pubs,
"<br>",
"<strong>Beer Name:</strong>",beer_name,
"<br>",
"<strong>Category:</strong>",category))
map
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(brewery, collapse = ", "), all_beers = paste(beer_name, collapse = ", "), all_years = paste(year, collapse = ", "))
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste(city, state
"<strong>Brewery:</strong>",all_pubs,
"<br>",
"<strong>Beer Name:</strong>",all_beers,
"<br>",
"<strong>Year:</strong>",all_years))
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste(city, state,
"<strong>Brewery:</strong>",all_pubs,
"<br>",
"<strong>Beer Name:</strong>",all_beers,
"<br>",
"<strong>Year:</strong>",all_years))
map
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste(city, state,
"<strong>Brewery:</strong>",all_pubs,
"<br>",
"<strong>Beer Name:</strong>",all_beers,
"<br>",
"<strong>Year:</strong>",all_years))
map
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste(city, state,
"<br>",
"<strong>Brewery:</strong>",all_pubs,
"<br>",
"<strong>Beer Name:</strong>",all_beers,
"<br>",
"<strong>Year:</strong>",all_years))
map
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(unique(brewery), collapse = ", "), all_beers = paste(beer_name, collapse = ", "), all_years = paste(year, collapse = ", "))
View(locations)
map <- leaflet() %>%
map <- leaflet() %>%
map <- leaflet() %>%
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste("<strong>City:</strong>", city, state,
"<br>",
"<strong>Gold Medal Brewery:</strong>",all_pubs))
map <- leaflet() %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=3, color = "purple",
popup=~paste("<strong>City:</strong>", city, state,
"<br>",
"<strong>Gold Medal Brewery:</strong>",all_pubs))
map
library(tidyverse)
library(glue)
library(leaflet)
library(geobuffer)
library(sf)
#DATA
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
us_cities_states_counties <- read_csv('https://raw.githubusercontent.com/kelvins/US-Cities-Database/main/csv/us_cities.csv')
#TIDY
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(unique(brewery), collapse = ", "), all_beers = paste(beer_name, collapse = ", "), all_years = paste(year, collapse = ", "))
cities <- st_as_sf(locations, coords=c("LONGITUDE", "LATITUDE"), crs = 4326) %>%
st_transform(crs = 7801)
buffer_1km <- st_buffer(cities, 80467) %>%
st_union() %>%
st_cast("POLYGON") %>%
st_transform(crs = 4326)
#PLOT
map <- leaflet(width = "100%") %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=2, color = "purple",
popup=~paste("<strong>City:</strong>", city, state,
"<br>",
"<strong>Gold Medal Brewery:</strong>",all_pubs))
map
library(DT)
datatable(beer_awards, options = list(pageLength = 50))
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
datatable(beer_awards, options = list(pageLength = 50))
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, options = list(pageLength = 50))
table
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, options = list(pageLength = 50), extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE) )
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, options = list(pageLength = 50), extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
library(tidyverse)
library(glue)
library(leaflet)
library(geobuffer)
library(sf)
#DATA
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
us_cities_states_counties <- read_csv('https://raw.githubusercontent.com/kelvins/US-Cities-Database/main/csv/us_cities.csv')
#TIDY
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(unique(brewery), collapse = ", "), all_beers = paste(beer_name, collapse = ", "), all_years = paste(year, collapse = ", "))
cities <- st_as_sf(locations, coords=c("LONGITUDE", "LATITUDE"), crs = 4326) %>%
st_transform(crs = 7801)
buffer_1km <- st_buffer(cities, 80467) %>%
st_union() %>%
st_cast("POLYGON") %>%
st_transform(crs = 4326)
#PLOT
map <- leaflet(width = "100%") %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=2, color = "purple",
popup=~paste("<strong>City:</strong>", city, state,
"<br>",
"<strong>Gold Medal Brewery:</strong>",all_pubs))
map
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
table
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
table
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
table
library(tidyverse)
library(glue)
library(leaflet)
library(geobuffer)
library(sf)
#DATA
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
us_cities_states_counties <- read_csv('https://raw.githubusercontent.com/kelvins/US-Cities-Database/main/csv/us_cities.csv')
#TIDY
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(unique(brewery), collapse = ", "), all_beers = paste(beer_name, collapse = ", "), all_years = paste(year, collapse = ", "))
cities <- st_as_sf(locations, coords=c("LONGITUDE", "LATITUDE"), crs = 4326) %>%
st_transform(crs = 7801)
buffer_1km <- st_buffer(cities, 80467) %>%
st_union() %>%
st_cast("POLYGON") %>%
st_transform(crs = 4326)
#PLOT
map <- leaflet(width = "100%") %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=2, color = "purple",
popup=~paste("<strong>City:</strong>", city, state,
"<br>",
"<strong>Gold Medal Brewery:</strong>",all_pubs))
map
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
library(DT)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
library(DT)
library(htmltools)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
library(DT)
library(htmltools)
library(htmlwidgets)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
library(DT)
library(htmltools)
library(htmlwidgets)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
library(DT)
library(htmltools)
library(htmlwidgets)
library(webshot)
install.packages("webshot")
library(DT)
library(htmltools)
library(htmlwidgets)
library(webshot)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
webshot::install_phantomjs()
library(tidyverse)
library(glue)
library(leaflet)
library(geobuffer)
library(sf)
#DATA
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
us_cities_states_counties <- read_csv('https://raw.githubusercontent.com/kelvins/US-Cities-Database/main/csv/us_cities.csv')
#TIDY
locations <- inner_join(beer_awards, us_cities_states_counties, by = c("state" = "STATE_CODE" , "city" = "CITY")) %>%
distinct(medal, beer_name, brewery, city, state, .keep_all = TRUE) %>%
filter(medal == "Gold") %>%
group_by(LATITUDE, LONGITUDE) %>%
mutate(all_pubs = paste(unique(brewery), collapse = ", "), all_beers = paste(beer_name, collapse = ", "), all_years = paste(year, collapse = ", "))
cities <- st_as_sf(locations, coords=c("LONGITUDE", "LATITUDE"), crs = 4326) %>%
st_transform(crs = 7801)
buffer_1km <- st_buffer(cities, 80467) %>%
st_union() %>%
st_cast("POLYGON") %>%
st_transform(crs = 4326)
#PLOT
map <- leaflet(width = "100%") %>%
addMeasure(primaryLengthUnit = "meters") %>%
addTiles() %>%
addPolygons(data = buffer_1km) %>%
addCircleMarkers(data = locations, ~LONGITUDE, ~LATITUDE, fillOpacity = 0.5, radius=2, color = "purple",
popup=~paste("<strong>City:</strong>", city, state,
"<br>",
"<strong>Gold Medal Brewery:</strong>",all_pubs))
map
library(DT)
library(htmltools)
library(htmlwidgets)
library(webshot)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
table <- datatable(beer_awards, extensions = c("Buttons" , "FixedColumns"),
filter = 'top',
options = list( autoWidth = TRUE ,
dom = 'Blftip',
pageLength = 100,
searchHighlight = FALSE,
buttons = c('copy', 'csv', 'print'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover') ,
rownames = FALSE)
knitr::knit_print(table)
