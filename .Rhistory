age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal()
age
age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal() + theme(legend. position = "none")
age
age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal() + theme(legend.position = "none")
age
age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal() + theme(legend.position = "none") + labs(title = "Astronaught Age Distribution", y= "", x="Age")
age
age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal() + theme(legend.position = "none") + labs(title = "Astronaught Age Distribution", x= "", y="Age")
age
age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal() + theme(legend.position = "none") + labs(title = "Astronaut Age Distribution", x= "", y="Age")
age
remotes::install_github("mattcowgill/ggannotate")
state <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv") %>%
filter(state == "California")
View(state)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
remotes::install_github("mattcowgill/ggannotate")
install.packages("devtools")
remotes::install_github("mattcowgill/ggannotate")
ERROR: lazy loading failed for package ‘ggannotate’
* removing ‘/Library/Frameworks/R.framework/Versions/4.0/Resources/library/ggannotate’
Error: Failed to install 'ggannotate' from GitHub:
(converted from warning) installation of package ‘/var/folders/_n/bdb_7jms2z1cdytp398fq60r0000gn/T//RtmppK81U0/file4190302fb93c/ggannotate_0.0.0.9000.tar.gz’ had non-zero exit status
remotes::install_github("mattcowgill/ggannotate")
library(tidyverse)
library(lubridate)
library(ggridges)
library(ggbeeswarm)
#Data
astronauts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-14/astronauts.csv')
#Filter
astronauts <- astronauts %>%
mutate(age = year_of_mission - year_of_birth, decade = floor(year_of_mission/ 10) * 10) %>%
mutate(Country = case_when(nationality == "U.S."~ "USA", nationality == "U.S.S.R/Russia" ~ "Russia", TRUE ~ "Other"))
#plot
age_dist <- ggplot(astronauts, aes(x=age, y=decade, group= decade, fill=..x.., alpha = 0.4)) + geom_density_ridges_gradient( alpha = 0.5) + scale_y_reverse(breaks=c(1960,1970,1980,1990,2000,2010),labels = c( "1960" = "1960s", "1970" = "1970s", "1980" = "1980s", "1990" = "1990s", "2000" = "2000s", "2010" = "2010s")) + theme_minimal() + facet_grid(~Country)
age_dist
age <- ggplot(astronauts, aes(Country, age,  color = Country)) + geom_quasirandom(size=1.75, varwidth = TRUE, width  = 0.60) + coord_flip() + scale_color_manual(values=c("#999999", "#DA291C", "#56B4E9"))  + theme_minimal() + theme(legend.position = "none") + labs(title = "Astronaut Age Distribution", x= "", y="Age")
age
remotes::install_github("mattcowgill/ggannotate")
remotes::install_github("mattcowgill/ggannotate")
eva <- ggplot(astronauts, aes(eva_hrs_mission, year)) + geom_col()
library(tidyverse)
library(lubridate)
library(ggridges)
library(ggbeeswarm)
eva <- ggplot(astronauts, aes(eva_hrs_mission, year)) + geom_col()
#Data
astronauts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-14/astronauts.csv')
#Filter
astronauts <- astronauts %>%
mutate(age = year_of_mission - year_of_birth, decade = floor(year_of_mission/ 10) * 10) %>%
mutate(Country = case_when(nationality == "U.S."~ "USA", nationality == "U.S.S.R/Russia" ~ "Russia", TRUE ~ "Other"))
age_dist <- ggplot(astronauts, aes(x=age, y=decade, group= decade, fill=..x.., alpha = 0.4)) + geom_density_ridges_gradient( alpha = 0.5) + scale_y_reverse(breaks=c(1960,1970,1980,1990,2000,2010),labels = c( "1960" = "1960s", "1970" = "1970s", "1980" = "1980s", "1990" = "1990s", "2000" = "2000s", "2010" = "2010s")) + theme_minimal() + facet_grid(~Country)
#Data
astronauts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-14/astronauts.csv')
install.packages("Rcpp")
#Data
astronauts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-14/astronauts.csv')
library(tidyverse)
remove.packages("Rcpp")
install.packages("Rcpp")
library(tidyverse)
library(Rcpp)
library(tidyverse)
update.packages(repos='http://cran.rstudio.com/', ask=FALSE, checkBuilt=TRUE)
library(tidyverse)
library(lubridate)
library(patchwork)
remove.packages("Rcpp")
install.packages("Rcpp")
library(Rcpp)
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
library(tidyverse)
library(lubridate)
library(patchwork)
national <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv")
state <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv") %>%
filter(state == "California")
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
nat_plot <- ggplot(national, aes(date, cases)) + geom_line(size=1.5) + theme_minimal()
nat_plot
state_plot <- ggplot(state, aes(date, cases)) + geom_line() + theme_minimal()
state_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
final <- nat_plot/state_plot/eastern_sirra_plot
final
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
View(county)
inyo <- county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo")
View(inyo)
shiny::runApp('COVID')
install.packages("shiny")
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(datasets)
data(faithful)
selectInput("n_breaks", label = "Number of bins:", choices = c(10, 20, 35, 50), selected = 20)
sliderInput("bw_adjust", label = "Bandwidth adjustment:", min = 0.2, max = 2, value = 1, step = 0.2)
install.packages("flexdashboard")
install.packages("flexdashboard")
---
title: "Untitled"
output:
flexdashboard::flex_dashboard:
orientation: columns
vertical_layout: fill
---
```{r setup, include=FALSE}
library(flexdashboard)
```
Column {data-width=650}
-----------------------------------------------------------------------
### Chart A
```{r}
```
Column {data-width=350}
-----------------------------------------------------------------------
### Chart B
```{r}
```
### Chart C
```{r}
```
library(flexdashboard)
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
library(flexdashboard)
library(tidyverse)
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
library(lubridate)
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
inyo <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
inyo_plot <- ggplot(inyo , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co positive cases", caption = "Data: New York Times")
inyo_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
library(lubridate)
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
group_by(date_col) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
filter(county == "Inyo" | county == "Mono") %>%
mutate(date_col = date(date)) %>%
summarise(cases = sum(cases)) %>%
add_row(date_col = as.Date("2020-01-25"), cases = as.double("0"))
View(county)
class(county$date_col)
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times")
eastern_sirra_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 week", date_labels = "%W")
eastern_sirra_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%M")
eastern_sirra_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%mm")
eastern_sirra_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_minimal(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot
eastern_sirra_plot <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 16) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot
getwd()
setwd("/Users/ianbell/Documents/GitHub/Tidy-Tuesdays/COVID")
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 360, height = 640)
library(tidyverse)
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 360, height = 640)
install.packages("glue")
library(glue)
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 360, height = 640)
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 3, height = 4, dpi = 300)
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12, plot.margin = margin(0, 0, 0, 2, "cm"),) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12, plot.margin = margin(0, 0, 0, 2, "cm"),) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12, plot.margin = margin(0, 0, 0, 2, "cm")) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0, 0, 0, 2, "cm")) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0, 2, 0, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0, 1, 0, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0.5, 1, 0.5, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra CA COVID-19", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
#IG plot save
ggsave(glue("COVID-", Sys.Date(format("%m/%d/%Y")), ".png"), width = 3, height = 4, dpi = 300)
#IG plot save
ggsave(glue("COVID-", Sys.Date(format="%m/%d/%Y"), ".png"), width = 3, height = 4, dpi = 300)
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 3, height = 4, dpi = 300)
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0.5, 1, 0.5, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra COVID", subtitle = "Inyo Co and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 3, height = 4, dpi = 300)
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0.5, 1, 0.5, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra COVID", subtitle = "Inyo and Mono Co positive cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 3, height = 4, dpi = 300)
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0.5, 1, 0.5, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra COVID", subtitle = "Inyo + Mono Co cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
eastern_sirra_plot_IG <- ggplot(county , aes(date_col, cases)) + geom_line(color= "red", size=1.2) + theme_linedraw(base_size = 12) + theme(plot.margin = margin(0.5, 1, 0.5, 0, "cm")) + labs(x="", y="", title = "Eastern Sierra COVID", subtitle = "Inyo and Mono Co cases", caption = "Data: New York Times") + scale_x_date(date_breaks = "1 month", date_labels = "%b")
eastern_sirra_plot_IG
#IG plot save
ggsave(glue("COVID-", Sys.Date(), ".png"), width = 3, height = 4, dpi = 300)
penguins.csv <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')
penguins_raw.csv <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins_raw.csv')
View(penguins_raw.csv)
library(tidyverse)
View(penguins.csv)
penguins <- penguins_raw.csv %>%
mutate(Species = case_when(Species == "Adelie Penguin (Pygoscelis adeliae)"~ "Adelie", Species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo", Species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap"))
View(penguins)
penguins <- penguins_raw.csv %>%
mutate(Species = case_when(Species == "Adelie Penguin (Pygoscelis adeliae)"~ "Adelie", Species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo", Species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap")) %>%
rename("Delta13C" = -2)
penguins <- penguins_raw.csv %>%
mutate(Species = case_when(Species == "Adelie Penguin (Pygoscelis adeliae)"~ "Adelie", Species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo", Species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap")) %>%
rename("Delta13C" = 16)
penguins <- penguins_raw.csv %>%
mutate(Species = case_when(Species == "Adelie Penguin (Pygoscelis adeliae)"~ "Adelie", Species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo", Species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap")) %>%
rename("Delta15N" = 15, "Delta13C" = 16)
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Region, Delta13C, color = Species)) + geom_point()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Island, Delta13C, color = Species)) + geom_point()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encirle()
install.packages("ggalt")
library(ggalt)
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encirle()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encirle()
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal()
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4"))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "Penguin Food Preferences", subtitle = "Stable isotope data")
Penguin_Plot
library(ggtext)
install.packages("ggtext")
library(ggtext)
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "Penguin Food Preferences", subtitle =  <span style = 'font-size:12pt'> "Stable isotope data indicates that 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>"")
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "Penguin Food Preferences", subtitle =  "<span style = 'font-size:12pt'> Stable isotope data indicates that 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>")
Penguin_Plot
library(ggtext)
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "Penguin Food Preferences", subtitle = "<span style = 'font-size:12pt'> Stable isotope data indicates that 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>")
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = " <span style = 'font-size:12pt'> 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>")
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = " <span style = 'font-size:12pt'> 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "cornsilk"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(subtitle = " <span style = 'font-size:12pt'> 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "cornsilk"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(subtitle = " <span style = 'font-size:12pt'> 508 schools had a MMR vaccination rate<span style = 'color:purple;'> below 90%. </span>") + theme(
plot.subtitle.position = "plot",
plot.subtitle = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "cornsilk"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Fuel economy vs. engine displacement</b><br><span style = 'font-size:10pt'>Lorem ipsum *dolor sit amet,*consectetur adipiscing elit, **sed do eiusmod tempor incididunt** ut labore et dolore magna aliqua. <span style = 'color:darkorange;'>Ut enimad minim veniam,</span> quis nostrud exercitation ullamco laboris nisiut aliquip ex ea commodo consequat.</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "cornsilk"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Fuel economy vs. engine displacement</b><br><span style = 'font-size:10pt'>Lorem ipsum *dolor sit amet,*consectetur adipiscing elit, **sed do eiusmod tempor incididunt** ut labore et dolore magna aliqua. <span style = 'color:darkorange;'>Ut enimad minim veniam,</span> quis nostrud exercitation ullamco laboris nisiut aliquip ex ea commodo consequat.</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "lightblue"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>Studies of the ratios of stable carbon and nitrogen isotopes in Antartic Penguins indicate possible food preferences <span style = 'color:darkorchid;'>Chinstrap,</span> and <span style = 'color:cyan4;'>Gentoo,</span> penguins seem to feed on unique ocean food sources.  food .</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "lightblue"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>Studies of the ratios of stable carbon and nitrogen isotopes in Antartic Penguins indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo,</span> penguins seem to feed on unique ocean food sources.  food .</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = ""
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>Studies of the ratios of stable carbon and nitrogen isotopes in Antartic Penguins indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo,</span> penguins seem to feed on unique ocean food sources.  food .</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
fill = "NULL"
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>Studies of the ratios of stable carbon and nitrogen isotopes in Antartic Penguins indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo,</span> penguins seem to feed on unique ocean food sources.  food .</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo,</span> penguins seem to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie,</span> penguins have overlap with both species.</span>") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio ") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta)) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta) "Nitrogen") + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*"Nitrogen")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon"))) + theme(
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on unique ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on distinct ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on distinct ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data:Horst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on distinct ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data:Horst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer\n Archipelago (Antarctica) penguin data. #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic Penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on distinct ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: Horst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer\n Archipelago (Antarctica) penguin data. #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
ggsave("penguins.png", height= 4, width = 4, dpi = 300)
getwd
getwd()
setwd("~/Documents/GitHub/Tidy-Tuesdays/2020-07-27")
ggsave("penguins.png", height= 4, width = 4, dpi = 300)
ggsave("penguins.png", height= 6, width = 6, dpi = 300)
Penguin_Plot <- ggplot(penguins, aes(Delta15N, Delta13C, color = Species)) + geom_point() + geom_encircle() + theme_minimal() + scale_color_manual(values = c("darkorange","darkorchid","cyan4")) + labs(title = "<b>Penguin Food Webs</b><br><span style = 'font-size:14pt'>The ratios of stable carbon and nitrogen isotopes in Antartic penguins can indicate food preferences. <span style = 'color:darkorchid;'>Chinstrap</span> and <span style = 'color:cyan4;'>Gentoo</span> penguins appear to feed on distinct ocean food sources, while <span style = 'color:darkorange;'>Adelie</span> penguins have overlap with both other species.</span>", caption = "Data: Horst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer\n Archipelago (Antarctica) penguin data. #TidyTuesday | @Ian_Bellio", x= expression(delta^{15}*" Nitrogen"), y= expression(delta^{13}*" Carbon")) + theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0),
))
Penguin_Plot
ggsave("penguins.png", height= 6, width = 6, dpi = 300)
